# Makefile for building the 'school' executable

# Compiler
CC = gcc

# Source files
SRC = main.c school.c

# Object files
OBJ = $(SRC:.c=.o)

# Executable name
NAME = school

# Compiler flags
CFLAGS = -Wall -Werror -Wextra -pedantic

# Program to delete files
RM = rm -f

# Default rule
all: $(NAME)

# Compile source files into object files
$(OBJ): %.o: %.c m.h
	$(CC) $(CFLAGS) -c $< -o $@

# Link object files into the executable
$(NAME): $(OBJ)
	$(CC) $(CFLAGS) $^ -o $@

# Clean rule to remove Emacs and Vim temporary files along with the executable
clean:
	$(RM) *~* $(NAME)

# Clean rule to remove object files
oclean:
	$(RM) $(OBJ)

# Clean rule to remove Emacs and Vim temporary files, executable, and object files
fclean: clean oclean

# Rule to force recompilation of all source files
re: fclean all

.PHONY: all clean oclean fclean re
